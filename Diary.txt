2009.06.28

Inputs 5 Qs, Centralized based on discrete cost function. Data analysis shows that cost1<cost2<cost3<cost4. No good.

Next should try a better approximation of continuous cost function.
12:26pm cost function updated
12:43pm cost function changed again to a less accurate form
12:56pm cost function changed back to the orignal form. It seems that when add more than one points in one hold control action will make the problem unfeasible.

Tried to increase horizon again
12:59pm N = 5; too much time needed, gave up

15:00pm Tried to decrease nc=20 and increase n from 1 to 2, cost decreases

Thoughts: use two mpc to manipulate Qs and one manipulate f1 to f3

16:47pm Changed all back

17:50pm nc = 45, OK, better than nc = 60

===============================================================================

2009.06.29

ToDo: Distributed MPC and write

10:36am	Mean evaluation time of centralized MPC manipulating 5 Qs with horizon 1 was 7665 ms

12:32pm Process noise are added to codes

12:34pm The average evaluation time of centralized MPC is 7525ms for horizon 1

12:57pm Running centralized MPC with horizon 2 and process noise

13:15pm The average evaluation time of centralized MPC manipulating 5 Qs with horizon 2 is 28943.9 ms

16:51pm Parallel evaluated decentralized is under debugging. U_g is changed to be 1 to tolerance some error.

ToDo: Rewrite constraints to be in the form corresponding to the paper.

19:35pm Centralized constraints are modified and is running. 

20:11pm Results are not good. Not smooth.

23:29pm Umax and weights are changed

23:38pm Under current weights and umax, 15 = nc, results of decentralized look very good

===================================================================================

2009.06.30

10:29am PI gain K changed

11:07am PI gain k and tau were changed back

12:49pm Planning to change the initial point

13:16pm New initial point has been found

13:50pm PI gain K and tau are changed

14:15pm PI gain K, tau and initial condition are changed back to last night

14:24pm Decentralized nc = 45, T1 and T2 ossilate, tau1 increased from 0.5e2 to 1e2

14:28pm Rc on Q1 increased from 1e-8 to 1e-6 and Q2 from 5e-8 to 1e-6

14:44pm All Rc are changed to 1e-6 from 1e-8

15:10pm Rc on Q1 increased to 1e-4, the decentralized is running and results are not good

15:15pm All the rest of Rc are changed to 1e-4 and is running again

Observations: increase Rc, decrease the magnitude of control inputs and make the optimization problems easier to solve

15:19pm Increased Rc on Q1 to Q3 to 1e-3

15:33pm All Rc are changed to 1e-2 and nc is changed to 30

17:48pm All changed back to last night

ToDo: find a better initial state and final state

Init: 
451.82247682884633	451.38139769672233	451.2200887328305	427.5047793906538	434.0479670156671
Final:
476.03164707630066	485.12059801458577	478.6829851524826	441.71494742478757	450.41994375837794

=====================================================================================

2009.07.01

10:56am Some mistakes have been corrected.

ToDo: Maybe try to find a good way to approximate the model (T15)

17:17pm It seems that even decentralized MPCs without constraints can stabilize the process very well.

ToDo: Add in the third MPC to manipulate F1 to F3 to see if the stability constraints work.

=============================================================================================

2009.07.02

10:28am MassEnergyBalance has been changed to take into account control on F1 - F3

17:28pm Program has been changed to consider 8 inputs, but centralized MPC doesn't work right now. There must be some problem with the simplification of the model used in the controller design.

==============================================================================================

2009.07.06

10:38am Separated Pv and Qc and changed weights on Rc2 back to 1, when Rc = 1, there is small oscilation of T

11:39am Rc has been changed

21:00pm A new reduced model is developed and used in centralized MPC. The only state predicted by the reduced model which does not fit with the actual model is x0

==============================================================================================

2009.07.07

10:51am Small bounds on F1 - F3 are used. This strategy gives good results. Right now, try to increase the bounds on F2 - F3 to see results.

17:16pm Maybe only F2 should be used; Sontag is modified, it seemed Ok now.

21:49pm Sontag is abondoned.

21:49pm Good constants are saved in Constants.java.bak20090707 in ./bak

21:54pm Stability constraint is added back to centralized MPC

22:59pm Noise is added to centralized MPC, results look good

===================================================================================================

2009.07.08

Inputs are decided to be 7. F2, F3 and Qs.

==================================================================================================

2009.07.09

14:04pm Weights Qc should be OK.

17:32pm ParaMPC.java is finished.

ToDo: ParaMPCControl.java

23:45pm ParaMPCControl is finished. Decentralized without constraint seems better than the case with constraints

===================================================================================================

2009.07.10

11:39am It seems that decentralized without constraints gives a better performance than controllers with constraints with nc = 30 and 45

12:36pm Decided not to mention MPCs without constraints; this point has been demonstrated in many previous papers

13:32pm Some small errors are fixed

14:43pm Ipopt tolerances are changed to be more tolerant

15:36pm With constraints, N=2, decentralized osillates; without constraints, N=2, decentrazlied good

15:47pm With constraints, N=2, ite=2, also oscillation

17:39pm It seems everything is set and simualtion results can be obtained

ToDo: Add cost calculation; try to make a the performance difference between centralized and decentralized big enough

ToDo: Maybe change constraints back to V style (No)

ToDo: Increase Rc on Q and Rc2 on F to make the process slow and use save good Q

======================================================================

2009.07.11

The system has negative eigenvalues and is stable

ToDo: Assume constant properties and simplify the system: 
1) modify the system structure (F1, F14 go into CSTR 1 directly etc.); 
2) constant density of the mixture
2) constant heat capacities of different species

==========================================================================

2009.07.16

Simplified model is running OK. Right now centralzied MPC does give a much smaller 
cost than decentrazlied MPC; however, the trajectories of decentrazlied look nicer.
The weighting matrices should be re-tuned to make centralized MPC give good control.

============================================================================

2009.07.17

When there is no flow rate control, the current Qc gives good results
{ 1e2,	5e1,	1e2,	5e3,	1e3,
  1e1,	1e2,	1e0,	1e0,	8e2,
  1e1,	1e2,	1e0,	1e0,	8e2,
  1e2,	1e-2,	1e3,	1e2,	5e3,
  1e3,	1e0,	1e3,	1e3,	1e3};

When flow rates are added in, the performance is also acceptable.
Rc = {1e-6, 1e-6, 1e-6, 1e-8, 1e-8};
Rc2 = {1e8, 1e8};

=============================================================================

2009.07.24

Centralized is not as good as decentralized, even 5Q and long N = 8. Maybe this is quite possible. Find an example.

ToDo: N = 1, calculate one step and apply one step and compare the cost

At the current options, no scaling, acceptable 1e-8, Centralized and Decentralized give the same performance with N=2 and apply two steps

============================================================================================

2009.07.27

Some good results are obtained and saved in sim/good.

Scaling and tolerance play important roles in optimizations.

======================================================================================

2009.07.28

11:25pm Finally, I got the centralized to give me the accepted results: 
when I started the system at the steady-state, the control inputs were zeros.

Conclusions: 1) F inputs are very small in the magnitude of 1e-5, when the 
step used in Ipopt to calculate the gradient is close to 1e-5, the accuracy 
is poor. When I reduce the step to 1e-13, everything goes well. 2) The accuracy
of the steady-state is also greatly increased to make the system work.

======================================================================================

2009.07.29

Great progress tonight. After I scaled all the inputs to the range [-1,1], the controllers 
suddenly work pretty well, at least for N=1.

===================================================================================

2009.07.30

19:01pm Distributed in parallel is changed by modifying the constraints to be constant.

19:27pm Distributed in parallel still gives costs increase with iterations when N = 3 (why?)

ToDo: increase N, decrease nc

20:18pm decrease nc to 30, no good trend found

22:19pm sontag gives cost 2.0280e7 with nc = 60, this is good, it bounds the upper cost

======================================================================================

2009.08.03

21:50pm Sontag is fixed and data should be collected again based on the new sontag.

21:50pm Also, the constraint in parampc is changed to be consistant with the paper.

21:23pm nc = 30 is good for Sontag, nc = 60 is Not.

22:09pm newsim folder is created

======================================================================================

17:12pm No good data is found. Q in dynamics is changed back to Q2 and newsim2 folder is created.
Input weights in cost functions are changed back to normal in both MPC and DMPC and all the other places.

19:41pm Reduce P

